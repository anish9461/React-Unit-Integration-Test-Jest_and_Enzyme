version: 2.1
orbs:
  node: circleci/node@1.1.6
jobs:
  build-and-test:
    working_directory: ~/app
    executor:
      name: node/default
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install packages
          command: |
            yarn install
      
      # - run:
      #     name: Coverage report
      #     command: |
      #       yarn coverage
      # - run:
      #     name: Install JUnit coverage reporter
      #     command: yarn add --dev jest-junit
      # yarn lint junit -o reports/junit/js-lint-results.xml
      - run:
          name: "JavaScript Linter"
          command: |
            mkdir -p ~/lint-reports
            yarn eslint ./src/ --format junit --output-file ~/lint-reports/eslint.xml
      - run:
          name: Run tests with JUnit as reporter
          command: yarn jest
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./reports/junit
      - store_artifacts:
          path: ./lint-reports 
          destination: Linter
            # - run:
      #     name: "JavaScript Linter"
      #     command: yarn lint --format junit -o reports/junit/js-lint-results.xml
      # - run:
      #     name: "JavaScript Test Suite"
      #     environment:
      #       JEST_JUNIT_OUTPUT: reports/junit/js-test-results.xml
      #     command: |
      #       mkdir -p reports/junit
      #       cd reports/junit
      #       yarn test --ci --testResultsProcessor="jest-junit"
      # - store_test_results:
      #     path: reports/junit
      # - store_artifacts:
      #     path: reports/junit
      # - run:
      #     name: Test application 
      #     command: npm test
      
            

      # - run:
      #     command: ls
      - store_artifacts:
          path: coverage
          destination: codeCoverage
      # - node/with-cache:
      #     steps:
      #       - run: rm -rf node_modules
      #       - run: rm -rf package-lock.json
      #       - run: 
      #       - run: npm install
      # - run: 
      #     name: Eject application 
      #     command: echo y | npm run eject 
       
workflows:
    build-and-test:
      jobs:
        - build-and-test